buildscript {
    ext {
        projectVersion = '1.6'

        gradleWrapperVersion = '3.1'

        daggerVersion = '2.6'
        bcelVersion = '6.0'
        commonsIoVersion = '2.5'
        slf4jVersion = '1.7.21'
        logbackVersion = '1.1.7'
        testngVersion = '6.9.13.6'
    }

    repositories {
        mavenCentral()
    }
}

plugins {
    id "com.github.kt3k.coveralls" version '2.6.3'
}

description = 'JMD is a general purpose Java bytecode deobfuscation tool'

subprojects {
    apply plugin:  "java"
    apply plugin:  "findbugs"
    apply plugin:  "pmd"
    apply plugin:  "jacoco"
    apply plugin:  "com.github.kt3k.coveralls"

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    version = projectVersion

    repositories {
        mavenCentral()
    }

    task wrapper(type: Wrapper) {
        gradleVersion = gradleWrapperVersion
    }

    findbugs {
        ignoreFailures = true
        effort = 'max'
    }

    pmd {
        ignoreFailures = true
        ruleSets = [
                'java-basic',
                'java-braces',
                'java-clone',
                'java-codesize',
                'java-comments',
                'java-controversial',
                'java-design',
                'java-empty',
                'java-finalizers',
                'java-imports',
                'java-j2ee',
                'java-javabeans',
                'java-junit',
                'java-logging-jakarta-commons',
                'java-logging-java',
                'java-migrating',
                'java-naming',
                'java-optimizations',
                'java-strictexception',
                'java-strings',
                'java-sunsecure',
                'java-typeresolution',
                'java-unnecessary',
                'java-unusedcode'
        ]
    }

    tasks.withType(Pmd) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    tasks.coveralls {
        dependsOn 'check'
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = false
        }
    }
}

project(':jmd-cli') {

    dependencies {
        compile project(':jmd-core')
    }

    jar {
        manifest {
            attributes 'Implementation-Title': 'net.contra.jmd',
                    'Implementation-Version': version,
                    'Main-Class': 'net.contra.jmd.Deobfuscator'
        }

        from {
            configurations.compile.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }
    }
}

project(':jmd-core') {

    dependencies {
        compile group: 'com.google.dagger', name: 'dagger', version: daggerVersion
        compile group: 'org.apache.bcel', name: 'bcel', version: bcelVersion
        compile group: 'commons-io', name: 'commons-io', version: commonsIoVersion
        compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
        compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion

        compile group: 'org.testng', name: 'testng', version: testngVersion
    }
}

project(':jmd-gui') {
}